{
  "stats": {
    "suites": 1,
    "tests": 5,
    "passes": 5,
    "pending": 0,
    "failures": 0,
    "start": "2025-02-09T20:00:43.693Z",
    "end": "2025-02-09T20:02:47.332Z",
    "duration": 123639,
    "testsRegistered": 5,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "7dff9ed4-a830-4206-88d3-e27ad6551333",
      "title": "",
      "fullFile": "cypress/e2e/tests/magentoTest.spec.js",
      "file": "cypress/e2e/tests/magentoTest.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "d2223ba0-c6d6-4f15-9a72-036ee59933ff",
          "title": "User registration and login test",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should register a new user",
              "fullTitle": "User registration and login test should register a new user",
              "timedOut": null,
              "duration": 14201,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.fixture('user.json').then(user => {\n  navigateTo.registrationPage();\n  onRegistrationPage.performUserRegistration(user);\n  cy.get('.message-success > div').should('have.text', 'Thank you for registering with Main Website Store.');\n  cy.get('.base').should('have.text', 'My Account');\n});",
              "err": {},
              "uuid": "ea403ef0-8e73-4272-be6b-51e388078b65",
              "parentUUID": "d2223ba0-c6d6-4f15-9a72-036ee59933ff",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should login and update default address",
              "fullTitle": "User registration and login test should login and update default address",
              "timedOut": null,
              "duration": 12881,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.fixture('user.json').then(user => {\n  cy.fixture('cart.json').then(cart => {\n    navigateTo.loginPage();\n    onLoginPage.performLogin(user);\n    cy.get('.base').should('have.text', 'My Account');\n    navigateTo.addressBookPage();\n    cy.get('.base').should('have.text', 'Add New Address');\n    onAddressBookPage.fillContactInformation(cart.address);\n    onAddressBookPage.fillAddress(cart.address);\n    onAddressBookPage.saveAddress();\n  });\n});",
              "err": {},
              "uuid": "8e68660c-0821-4e5c-869d-76f78ce549e5",
              "parentUUID": "d2223ba0-c6d6-4f15-9a72-036ee59933ff",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should login and place an order with multiple products",
              "fullTitle": "User registration and login test should login and place an order with multiple products",
              "timedOut": null,
              "duration": 36476,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.fixture('user.json').then(user => {\n  cy.fixture('cart.json').then(cart => {\n    navigateTo.loginPage();\n    onLoginPage.performLogin(user);\n    cy.get('.base').should('have.text', 'My Account');\n    cy.get('.counter-number').invoke('text').then(initialCount => {\n      let cartCount = parseInt(initialCount) || 0;\n      onProductPage.searchProductAndAddToCart(cart.products, (product, index) => {\n        cy.get('.message-success', {\n          timeout: 6000\n        }).scrollIntoView().should('be.visible').contains(`You added ${product.name} to your shopping cart.`);\n      });\n    });\n    navigateTo.shoppingCartPage();\n    onShoppingCartPage.clickProceedToCheckout();\n    onCheckoutPage.clickNextAndGoToReviewAndPayments();\n    onCheckoutPage.placeOrder();\n    cy.get('.base').should('have.text', 'Thank you for your purchase!');\n  });\n});",
              "err": {},
              "uuid": "1dc7e4f5-6b39-4b55-bdf0-e487403c46d8",
              "parentUUID": "d2223ba0-c6d6-4f15-9a72-036ee59933ff",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should login and add multiple products to wishlist and then checkout from wishlist",
              "fullTitle": "User registration and login test should login and add multiple products to wishlist and then checkout from wishlist",
              "timedOut": null,
              "duration": 35840,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.fixture('user.json').then(user => {\n  cy.fixture('cart.json').then(cart => {\n    navigateTo.loginPage();\n    onLoginPage.performLogin(user);\n    cart.products.forEach(product => {\n      onProductPage.searchProductAndAddToWishlist(product.name);\n    });\n    onWishlistPage.addAllProductsToCart();\n    cy.get('.message-success > div').should('contain.text', 'product(s) have been added to shopping cart:');\n    navigateTo.shoppingCartPage();\n    cart.products.forEach(product => {\n      cy.contains('.item', product.name, {\n        timeout: 6000\n      }).should('be.visible');\n    });\n    onShoppingCartPage.clickProceedToCheckout();\n    onCheckoutPage.clickNextAndGoToReviewAndPayments();\n    onCheckoutPage.placeOrder();\n    cy.get('.base').should('have.text', 'Thank you for your purchase!');\n  });\n});",
              "err": {},
              "uuid": "dc507af2-3c88-46e1-8fad-6bf5c6c68bba",
              "parentUUID": "d2223ba0-c6d6-4f15-9a72-036ee59933ff",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should login and search product then verify the accuracy of result",
              "fullTitle": "User registration and login test should login and search product then verify the accuracy of result",
              "timedOut": null,
              "duration": 12722,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.fixture('user.json').then(user => {\n  cy.fixture('cart.json').then(cart => {\n    navigateTo.loginPage();\n    onLoginPage.performLogin(user);\n    onProductPage.searchProductAndVerifyResult(cart.products);\n  });\n});",
              "err": {},
              "uuid": "96aba0cc-483e-4bee-87b4-a8041c78f128",
              "parentUUID": "d2223ba0-c6d6-4f15-9a72-036ee59933ff",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ea403ef0-8e73-4272-be6b-51e388078b65",
            "8e68660c-0821-4e5c-869d-76f78ce549e5",
            "1dc7e4f5-6b39-4b55-bdf0-e487403c46d8",
            "dc507af2-3c88-46e1-8fad-6bf5c6c68bba",
            "96aba0cc-483e-4bee-87b4-a8041c78f128"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 112120,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports",
        "overwrite": false,
        "html": true,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}