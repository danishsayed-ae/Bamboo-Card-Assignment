{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 0,
    "pending": 0,
    "failures": 1,
    "start": "2025-02-09T20:03:54.890Z",
    "end": "2025-02-09T20:04:11.238Z",
    "duration": 16348,
    "testsRegistered": 5,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 1,
    "hasOther": true,
    "skipped": 4,
    "hasSkipped": true
  },
  "results": [
    {
      "uuid": "979d7fdc-aade-42b2-b3e4-198742aad0ff",
      "title": "",
      "fullFile": "cypress/e2e/tests/magentoTest.spec.js",
      "file": "cypress/e2e/tests/magentoTest.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "e351ee3d-070d-4fe5-bb7b-c69f79de9007",
          "title": "User registration and login test",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should register a new user",
              "fullTitle": "User registration and login test should register a new user",
              "timedOut": null,
              "duration": 145,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture('user.json').then(user => {\n  navigateTo.registrationPage();\n  onRegistrationPage.performUserRegistration(user);\n  cy.get('.message-success > div').should('have.text', 'Thank you for registering with Main Website Store.');\n  cy.get('.base').should('have.text', 'My Account');\n});",
              "err": {
                "message": "CypressError: `cy.click()` failed because it requires a DOM element.\n\nNo elements in the current DOM matched your query:\n\n  > cy.get(:nth-child(2) > .customer-welcome > .customer-name > .action)\n\nBecause this error occurred during a `after each` hook we are skipping the remaining tests in the current suite: `User registration and login...`",
                "estack": "CypressError: `cy.click()` failed because it requires a DOM element.\n\nNo elements in the current DOM matched your query:\n\n  > cy.get(:nth-child(2) > .customer-welcome > .customer-name > .action)\n\nBecause this error occurred during a `after each` hook we are skipping the remaining tests in the current suite: `User registration and login...`\n    at isElement (https://magento.softwaretestingboard.com/__cypress/runner/cypress_runner.js:144765:62)\n    at validateType (https://magento.softwaretestingboard.com/__cypress/runner/cypress_runner.js:144623:14)\n    at Object.isType (https://magento.softwaretestingboard.com/__cypress/runner/cypress_runner.js:144654:7)\n    at $Cy.pushSubject (https://magento.softwaretestingboard.com/__cypress/runner/cypress_runner.js:138325:22)\n    at wrapped (https://magento.softwaretestingboard.com/__cypress/runner/cypress_runner.js:137882:19)\nFrom Your Spec Code:\n    at captureUserInvocationStack (https://magento.softwaretestingboard.com/__cypress/runner/cypress_runner.js:138885:94)\n    at Assertion.assert (https://magento.softwaretestingboard.com/__cypress/runner/cypress_runner.js:138913:9)\n    at Assertion.<anonymous> (https://magento.softwaretestingboard.com/__cypress/runner/cypress_runner.js:138855:25)\n    at Assertion.overwritingPropertyGetter (https://magento.softwaretestingboard.com/__cypress/runner/cypress_runner.js:78003:37)\n    at Object.proxyGetter [as get] (https://magento.softwaretestingboard.com/__cypress/runner/cypress_runner.js:77869:22)\n    at exists (https://magento.softwaretestingboard.com/__cypress/runner/cypress_runner.js:142734:26)\n    at elExists (https://magento.softwaretestingboard.com/__cypress/runner/cypress_runner.js:142749:10)\n    at ensureExistence (https://magento.softwaretestingboard.com/__cypress/runner/cypress_runner.js:142930:22)\n    at onFailFn (https://magento.softwaretestingboard.com/__cypress/runner/cypress_runner.js:142959:53)\n    at tryCatcher (https://magento.softwaretestingboard.com/__cypress/runner/cypress_runner.js:1777:23)",
                "diff": null
              },
              "uuid": "3191eec1-5302-48a9-a5b6-5788b3491bad",
              "parentUUID": "e351ee3d-070d-4fe5-bb7b-c69f79de9007",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should login and update default address",
              "fullTitle": "User registration and login test should login and update default address",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.fixture('user.json').then(user => {\n  cy.fixture('cart.json').then(cart => {\n    navigateTo.loginPage();\n    onLoginPage.performLogin(user);\n    cy.get('.base').should('have.text', 'My Account');\n    navigateTo.addressBookPage();\n    cy.get('.base').should('have.text', 'Add New Address');\n    onAddressBookPage.fillContactInformation(cart.address);\n    onAddressBookPage.fillAddress(cart.address);\n    onAddressBookPage.saveAddress();\n  });\n});",
              "err": {},
              "uuid": "3c1af7fc-bfa5-441a-9d67-92d54aa38021",
              "parentUUID": "e351ee3d-070d-4fe5-bb7b-c69f79de9007",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "should login and place an order with multiple products",
              "fullTitle": "User registration and login test should login and place an order with multiple products",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.fixture('user.json').then(user => {\n  cy.fixture('cart.json').then(cart => {\n    navigateTo.loginPage();\n    onLoginPage.performLogin(user);\n    cy.get('.base').should('have.text', 'My Account');\n    cy.get('.counter-number').invoke('text').then(initialCount => {\n      let cartCount = parseInt(initialCount) || 0;\n      onProductPage.searchProductAndAddToCart(cart.products, (product, index) => {\n        cy.get('.message-success', {\n          timeout: 6000\n        }).scrollIntoView().should('be.visible').contains(`You added ${product.name} to your shopping cart.`);\n      });\n    });\n    navigateTo.shoppingCartPage();\n    onShoppingCartPage.clickProceedToCheckout();\n    onCheckoutPage.clickNextAndGoToReviewAndPayments();\n    onCheckoutPage.placeOrder();\n    cy.get('.base').should('have.text', 'Thank you for your purchase!');\n  });\n});",
              "err": {},
              "uuid": "96df4c14-a071-45e6-b02a-874955b456a1",
              "parentUUID": "e351ee3d-070d-4fe5-bb7b-c69f79de9007",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "should login and add multiple products to wishlist and then checkout from wishlist",
              "fullTitle": "User registration and login test should login and add multiple products to wishlist and then checkout from wishlist",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.fixture('user.json').then(user => {\n  cy.fixture('cart.json').then(cart => {\n    navigateTo.loginPage();\n    onLoginPage.performLogin(user);\n    cart.products.forEach(product => {\n      onProductPage.searchProductAndAddToWishlist(product.name);\n    });\n    onWishlistPage.addAllProductsToCart();\n    cy.get('.message-success > div').should('contain.text', 'product(s) have been added to shopping cart:');\n    navigateTo.shoppingCartPage();\n    cart.products.forEach(product => {\n      cy.contains('.item', product.name, {\n        timeout: 6000\n      }).should('be.visible');\n    });\n    onShoppingCartPage.clickProceedToCheckout();\n    onCheckoutPage.clickNextAndGoToReviewAndPayments();\n    onCheckoutPage.placeOrder();\n    cy.get('.base').should('have.text', 'Thank you for your purchase!');\n  });\n});",
              "err": {},
              "uuid": "1e188313-0dc0-441e-bb4e-65ecfcdb1f12",
              "parentUUID": "e351ee3d-070d-4fe5-bb7b-c69f79de9007",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "should login and search product then verify the accuracy of result",
              "fullTitle": "User registration and login test should login and search product then verify the accuracy of result",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.fixture('user.json').then(user => {\n  cy.fixture('cart.json').then(cart => {\n    navigateTo.loginPage();\n    onLoginPage.performLogin(user);\n    onProductPage.searchProductAndVerifyResult(cart.products);\n  });\n});",
              "err": {},
              "uuid": "34a2fe9f-8983-423b-b435-f92e6ef64317",
              "parentUUID": "e351ee3d-070d-4fe5-bb7b-c69f79de9007",
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "3191eec1-5302-48a9-a5b6-5788b3491bad"
          ],
          "pending": [],
          "skipped": [
            "3c1af7fc-bfa5-441a-9d67-92d54aa38021",
            "96df4c14-a071-45e6-b02a-874955b456a1",
            "1e188313-0dc0-441e-bb4e-65ecfcdb1f12",
            "34a2fe9f-8983-423b-b435-f92e6ef64317"
          ],
          "duration": 145,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports",
        "overwrite": false,
        "html": true,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}